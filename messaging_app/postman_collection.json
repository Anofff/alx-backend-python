{
  "info": {
    "name": "Messaging App API Collection",
    "description": "Complete API testing collection for Django messaging app with JWT authentication",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{access_token}}",
        "type": "string"
      }
    ]
  },
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:8000",
      "type": "string"
    },
    {
      "key": "access_token",
      "value": "",
      "type": "string"
    },
    {
      "key": "refresh_token",
      "value": "",
      "type": "string"
    },
    {
      "key": "conversation_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "message_id",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Authentication",
      "item": [
        {
          "name": "Get JWT Token",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"testuser\",\n  \"password\": \"testpass123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/token/",
              "host": ["{{base_url}}"],
              "path": ["api", "token", ""]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('access_token', response.access);",
                  "    pm.collectionVariables.set('refresh_token', response.refresh);",
                  "    console.log('Access token saved:', response.access);",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Refresh JWT Token",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"refresh\": \"{{refresh_token}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/token/refresh/",
              "host": ["{{base_url}}"],
              "path": ["api", "token", "refresh", ""]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('access_token', response.access);",
                  "    console.log('New access token saved:', response.access);",
                  "}"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Conversations",
      "item": [
        {
          "name": "List Conversations",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/conversations/",
              "host": ["{{base_url}}"],
              "path": ["api", "conversations", ""]
            }
          }
        },
        {
          "name": "Create Conversation",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"participants\": [1, 2]\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/conversations/",
              "host": ["{{base_url}}"],
              "path": ["api", "conversations", ""]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('conversation_id', response.conversation_id);",
                  "    console.log('Conversation created:', response.conversation_id);",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Get Conversation Details",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/conversations/{{conversation_id}}/",
              "host": ["{{base_url}}"],
              "path": ["api", "conversations", "{{conversation_id}}", ""]
            }
          }
        },
        {
          "name": "Update Conversation",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"participants\": [1, 2, 3]\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/conversations/{{conversation_id}}/",
              "host": ["{{base_url}}"],
              "path": ["api", "conversations", "{{conversation_id}}", ""]
            }
          }
        },
        {
          "name": "Delete Conversation",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/conversations/{{conversation_id}}/",
              "host": ["{{base_url}}"],
              "path": ["api", "conversations", "{{conversation_id}}", ""]
            }
          }
        }
      ]
    },
    {
      "name": "Messages",
      "item": [
        {
          "name": "List Messages",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/messages/",
              "host": ["{{base_url}}"],
              "path": ["api", "messages", ""]
            }
          }
        },
        {
          "name": "List Messages with Pagination",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/messages/?page=1&page_size=10",
              "host": ["{{base_url}}"],
              "path": ["api", "messages", ""],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "page_size",
                  "value": "10"
                }
              ]
            }
          }
        },
        {
          "name": "Filter Messages by Date Range",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/messages/?start_date=2024-01-01T00:00:00Z&end_date=2024-12-31T23:59:59Z",
              "host": ["{{base_url}}"],
              "path": ["api", "messages", ""],
              "query": [
                {
                  "key": "start_date",
                  "value": "2024-01-01T00:00:00Z"
                },
                {
                  "key": "end_date",
                  "value": "2024-12-31T23:59:59Z"
                }
              ]
            }
          }
        },
        {
          "name": "Filter Messages by User",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/messages/?user=testuser",
              "host": ["{{base_url}}"],
              "path": ["api", "messages", ""],
              "query": [
                {
                  "key": "user",
                  "value": "testuser"
                }
              ]
            }
          }
        },
        {
          "name": "Send Message",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"conversation\": \"{{conversation_id}}\",\n  \"message_body\": \"Hello! This is a test message.\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/messages/",
              "host": ["{{base_url}}"],
              "path": ["api", "messages", ""]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('message_id', response.message_id);",
                  "    console.log('Message sent:', response.message_id);",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Get Message Details",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/messages/{{message_id}}/",
              "host": ["{{base_url}}"],
              "path": ["api", "messages", "{{message_id}}", ""]
            }
          }
        },
        {
          "name": "Update Message",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"conversation\": \"{{conversation_id}}\",\n  \"message_body\": \"Updated message content\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/messages/{{message_id}}/",
              "host": ["{{base_url}}"],
              "path": ["api", "messages", "{{message_id}}", ""]
            }
          }
        },
        {
          "name": "Delete Message",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/messages/{{message_id}}/",
              "host": ["{{base_url}}"],
              "path": ["api", "messages", "{{message_id}}", ""]
            }
          }
        }
      ]
    },
    {
      "name": "Security Tests",
      "item": [
        {
          "name": "Test Unauthorized Access (No Token)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/conversations/",
              "host": ["{{base_url}}"],
              "path": ["api", "conversations", ""]
            }
          }
        },
        {
          "name": "Test Invalid Token",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer invalid_token_here"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/conversations/",
              "host": ["{{base_url}}"],
              "path": ["api", "conversations", ""]
            }
          }
        },
        {
          "name": "Test Access to Other User's Conversation",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/conversations/999/",
              "host": ["{{base_url}}"],
              "path": ["api", "conversations", "999", ""]
            }
          }
        }
      ]
    }
  ]
}
